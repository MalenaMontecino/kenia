FUNCIONES INDIVIDUALES PARA EL SPAWN DE LOS OBJETOS 
----------------------------------------------------------------------------------------------------------------
// // ESTA FUNCION FUNCIONA!!!
// function spawnObjetos() {
  
//   let imagenPiedra = document .createElement("img");
//   imagenPiedra.src = "/images/objetos/piedra.png ";
 
//   // Generar posiciones aleatorias dentro de la matriz
//   randomX = Math.floor(Math.random() * 8);
//   randomY = Math.floor(Math.random() * 8);

//   console.log(randomX);
//   console.log(randomY);

//   // Obtener las posiciones absolutas del objeto en píxeles
//   const objetoLeft = randomY * 100;
//   const objetoTop = randomX * 80;

//   // Verificar si las cuatro esquinas del objeto están dentro del camino
//   const objetoTopLeftRow = Math.floor((objetoTop) / 80);
//   const objetoTopLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoTopRightRow = Math.floor((objetoTop) / 80);
//   const objetoTopRightColumn = Math.floor((objetoLeft + imagenPiedra.offsetWidth) / 100);

//   const objetoBottomLeftRow = Math.floor((objetoTop + imagenPiedra.offsetHeight) / 80);
//   const objetoBottomLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoBottomRightRow = Math.floor((objetoTop + imagenPiedra.offsetHeight) / 80);
//   const objetoBottomRightColumn = Math.floor((objetoLeft + imagenPiedra.offsetWidth) / 100);

//   // Verificar si todas las esquinas están dentro del camino  
//   const topLeftIsBlocked2 = arrayCamino[objetoTopLeftRow][objetoTopLeftColumn] === 0;
//   const topRightIsBlocked2 = arrayCamino[objetoTopRightRow][objetoTopRightColumn] === 0;
//   const bottomLeftIsBlocked2 = arrayCamino[objetoBottomLeftRow][objetoBottomLeftColumn] === 0;
//   const bottomRightIsBlocked2 = arrayCamino[objetoBottomRightRow][objetoBottomRightColumn] === 0;

//   if (topLeftIsBlocked2 || topRightIsBlocked2 || bottomLeftIsBlocked2 || bottomRightIsBlocked2) {
//     // Si alguna esquina está bloqueada, vuelve a intentar generar una posición
//     spawnObjetos();
//   } else { 
    
//     let contenedorImagenPiedra = document.getElementById("imagenPiedra");
//     contenedorImagenPiedra.style.left = objetoLeft + 'px';
//     contenedorImagenPiedra.style.top = objetoTop + 'px';
//     contenedorImagenPiedra.appendChild(imagenPiedra);

   
//     // Agregar el contenedor al juego
//     game.appendChild(contenedorImagenPiedra);
//   }
// }
// // ESTA FUNCION FUNCIONA!!!
// function spawnObjetosPalo() {
  
//   let imagenPalo  = document .createElement("img");
//   imagenPalo.src = "/images/objetos/paloBuenoB.png ";
 
//   // Generar posiciones aleatorias dentro de la matriz
//   randomX = Math.floor(Math.random() * 8);
//   randomY = Math.floor(Math.random() * 8);

//   console.log(randomX);
//   console.log(randomY);

//   // Obtener las posiciones absolutas del objeto en píxeles
//   const objetoLeft = randomY * 100;
//   const objetoTop = randomX * 80;

//   // Verificar si las cuatro esquinas del objeto están dentro del camino
//   const objetoTopLeftRow = Math.floor((objetoTop) / 80);
//   const objetoTopLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoTopRightRow = Math.floor((objetoTop) / 80);
//   const objetoTopRightColumn = Math.floor((objetoLeft + imagenPalo.offsetWidth) / 100);

//   const objetoBottomLeftRow = Math.floor((objetoTop + imagenPalo.offsetHeight) / 80);
//   const objetoBottomLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoBottomRightRow = Math.floor((objetoTop + imagenPalo.offsetHeight) / 80);
//   const objetoBottomRightColumn = Math.floor((objetoLeft + imagenPalo.offsetWidth) / 100);

//   // Verificar si todas las esquinas están dentro del camino  
//   const topLeftIsBlocked2 = arrayCamino[objetoTopLeftRow][objetoTopLeftColumn] === 0;
//   const topRightIsBlocked2 = arrayCamino[objetoTopRightRow][objetoTopRightColumn] === 0;
//   const bottomLeftIsBlocked2 = arrayCamino[objetoBottomLeftRow][objetoBottomLeftColumn] === 0;
//   const bottomRightIsBlocked2 = arrayCamino[objetoBottomRightRow][objetoBottomRightColumn] === 0;

//   if (topLeftIsBlocked2 || topRightIsBlocked2 || bottomLeftIsBlocked2 || bottomRightIsBlocked2) {
//     // Si alguna esquina está bloqueada, vuelve a intentar generar una posición
//     spawnObjetosPalo();
//   } else { 
    
//     let contenedorImagenPalo = document.getElementById("imagenPalo");
//     contenedorImagenPalo.style.left = objetoLeft + 'px';
//     contenedorImagenPalo.style.top = objetoTop + 'px';
//     contenedorImagenPalo.appendChild(imagenPalo);

   
//     // Agregar el contenedor al juego
//     game.appendChild(contenedorImagenPalo); 
//   }
// }

// // ESTA FUNCION FUNCIONA!!!
// function spawnObjetosPlaca() {
  
//   let imagenPlaca = document .createElement("img");
//   imagenPlaca.src = "/images/objetos/placasolarBuenaB.png ";
 
//   // Generar posiciones aleatorias dentro de la matriz
//   randomX = Math.floor(Math.random() * 8);
//   randomY = Math.floor(Math.random() * 8);

//   console.log(randomX);
//   console.log(randomY);

//   // Obtener las posiciones absolutas del objeto en píxeles
//   const objetoLeft = randomY * 100;
//   const objetoTop = randomX * 80;

//   // Verificar si las cuatro esquinas del objeto están dentro del camino
//   const objetoTopLeftRow = Math.floor((objetoTop) / 80);
//   const objetoTopLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoTopRightRow = Math.floor((objetoTop) / 80);
//   const objetoTopRightColumn = Math.floor((objetoLeft + imagenPlaca.offsetWidth) / 100);

//   const objetoBottomLeftRow = Math.floor((objetoTop + imagenPlaca.offsetHeight) / 80);
//   const objetoBottomLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoBottomRightRow = Math.floor((objetoTop + imagenPlaca.offsetHeight) / 80);
//   const objetoBottomRightColumn = Math.floor((objetoLeft + imagenPlaca.offsetWidth) / 100);

//   // Verificar si todas las esquinas están dentro del camino  
//   const topLeftIsBlocked2 = arrayCamino[objetoTopLeftRow][objetoTopLeftColumn] === 0;
//   const topRightIsBlocked2 = arrayCamino[objetoTopRightRow][objetoTopRightColumn] === 0;
//   const bottomLeftIsBlocked2 = arrayCamino[objetoBottomLeftRow][objetoBottomLeftColumn] === 0;
//   const bottomRightIsBlocked2 = arrayCamino[objetoBottomRightRow][objetoBottomRightColumn] === 0;

//   if (topLeftIsBlocked2 || topRightIsBlocked2 || bottomLeftIsBlocked2 || bottomRightIsBlocked2) {
//     // Si alguna esquina está bloqueada, vuelve a intentar generar una posición
//     spawnObjetosPlaca();
//   } else { 
    
//     let contenedorImagenPlaca = document.getElementById("imagenPlacasolar");
//     contenedorImagenPlaca.style.left = objetoLeft + 'px';
//     contenedorImagenPlaca.style.top = objetoTop + 'px';
//     contenedorImagenPlaca.appendChild(imagenPlaca);

   
//     // Agregar el contenedor al juego
//     game.appendChild(contenedorImagenPlaca);
//   }
// }

 


---------------------------------------------------------------------------------------------------------



// function actualizarVidas() {
  
//   document.getElementById('vidas').innerHTML = "VIDAS: " + vidas ;
//   perder();
// }

// https://safeimagekit.com/   para pasar las imagenes a pixelart

// function comprobarCamino() {
//   // Calcula las coordenadas en la matriz
//   const columna = Math.floor((leftPos - 10) / 100); //math.floor redondea el número
//   const fila = Math.floor((topPos - 10) / 80);

//   // // Verifica si la posición actual en la matriz es 1 (camino válido)
//   if (arrayCamino[fila][columna] === 0) {
//     // no es una posición válida, detén el movimiento
//     clearInterval(intervalId);
//     intervalId = setInterval(() => {
//       personaje.style.top = (topPos + 10) + 'px';
//       clearInterval(intervalId);
//     },100);

//   }
//   // printea posición del personaje
//   document.getElementById('cuadrante').innerHTML = "cuadrante = [" + columna + ", " + fila + "]";
// }
// function actualizarVidas(){
//   vidas = 3;
// }

//DENTRO DE FUNCIÓN COMPROBAR CAMINO
//para saber por consola por donde se está saliendo.
// if (topLeftIsBlocked) {
//   // Personaje está saliendo por la esquina superior izquierda.
//   console.log("Personaje está saliendo por la esquina superior izquierda");
// }

// if (topRightIsBlocked) {
//   // Personaje está saliendo por la esquina superior derecha.
//   console.log("Personaje está saliendo por la esquina superior derecha");
// }

// if (bottomLeftIsBlocked) {
//   // Personaje está saliendo por la esquina inferior izquierda.
//   console.log("Personaje está saliendo por la esquina inferior izquierda");
// }

// if (bottomRightIsBlocked) {
//   // Personaje está saliendo por la esquina inferior derecha.
//   console.log("Personaje está saliendo por la esquina inferior derecha");
// }


//funcion para hacer aparecer los objetos en sitios random
//funcion para comprobar que estan dentro de la array / si no volver a generar
//funcion para la colision con los objetosfunction spawnObjetos() {


// COPIA FUNCION PERO SIN BORRAR LO QUE ESTABA COMENTADO
// function spawnObjetos() {


//   let imagenPiedra = document.createElement("img");
//   imagenPiedra.src = "/images/objetos/piedra.png ";

//   //const imagenPalo = document.getElementById('imagenPalo');
//   //  const imagenPiedra = document.getElementById('imagenPiedra');
//   //const imagenPlacasolar = document.getElementById('imagenPlacasolar');

//   // imagenPalo.src = "/images/objetos/paloPixelart.png";
//   //imagenPiedra.src = "/images/objetos/piedraPixelart.png";
//   // imagenPlacasolar.src = "/images/objetos/placaSolar.png";

//   // Generar posiciones aleatorias dentro de la matriz
//   randomX = Math.floor(Math.random() * 8);
//   randomY = Math.floor(Math.random() * 8);

//   console.log(randomX);
//   console.log(randomY );

//   // Obtener las posiciones absolutas del objeto en píxeles
//   const objetoLeft = randomY * 100;
//   const objetoTop = randomX * 80;

//   // Verificar si las cuatro esquinas del objeto están dentro del camino
//   const objetoTopLeftRow = Math.floor((objetoTop) / 80);
//   const objetoTopLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoTopRightRow = Math.floor((objetoTop) / 80);
//   const objetoTopRightColumn = Math.floor((objetoLeft + imagenPiedra.offsetWidth) / 100);

//   const objetoBottomLeftRow = Math.floor((objetoTop + imagenPiedra.offsetHeight) / 80);
//   const objetoBottomLeftColumn = Math.floor((objetoLeft) / 100);

//   const objetoBottomRightRow = Math.floor((objetoTop + imagenPiedra.offsetHeight) / 80);
//   const objetoBottomRightColumn = Math.floor((objetoLeft + imagenPiedra.offsetWidth) / 100);

//   // Verificar si todas las esquinas están dentro del camino  
//   const topLeftIsBlocked2 = arrayCamino[objetoTopLeftRow][objetoTopLeftColumn] === 0;
//   const topRightIsBlocked2 = arrayCamino[objetoTopRightRow][objetoTopRightColumn] === 0;
//   const bottomLeftIsBlocked2 = arrayCamino[objetoBottomLeftRow][objetoBottomLeftColumn] === 0;
//   const bottomRightIsBlocked2 = arrayCamino[objetoBottomRightRow][objetoBottomRightColumn] === 0;

//   if (topLeftIsBlocked2 || topRightIsBlocked2 || bottomLeftIsBlocked2 || bottomRightIsBlocked2) {
//     // Si alguna esquina está bloqueada, vuelve a intentar generar una posición
//     spawnObjetos();
//   } else {
//     // Posición válida, puedes usar obj etoLeft y objetoTop para establecer la posición del objeto
//     // Ejemplo:

//     let contenedorImagenPiedra = document.getElementById("imagenPiedra");
//     contenedorImagenPiedra.style.left = objetoLeft + 'px';
//     contenedorImagenPiedra.style.top = objetoTop + 'px';
//     contenedorImagenPiedra.appendChild(imagenPiedra);

//     // const objeto = document.getElementById('imagenPiedra'); // Reemplaza 'objeto' con el ID real de tu objeto
//     // objeto.style.left = objetoLeft + 'px';
//     // objeto.style.top = objetoTop + 'px';
//   }
// }
// Array que contiene las imágenes de los objetos
// function spawnObjetos() {
//   // Crear tres imágenes diferentes
//   let imagenPiedra = document.createElement("img");
//   let imagenPalo = document.createElement("img");
//   let imagenPlacasolar = document.createElement("img");

//   // Definir las fuentes de las imágenes
//   imagenPiedra.src = "/images/objetos/piedra.png";
//   imagenPalo.src = "/images/objetos/paloBuenoB.png";
//   imagenPlacasolar.src = "/images/objetos/placasolarBuenaB.png";

//   // Generar posiciones aleatorias dentro de la matriz para cada objeto
//   let objetos = [
//     { imagen: imagenPiedra, src: "/images/objetos/piedra.png" },
//     { imagen: imagenPalo, src: "/images/objetos/paloBuenoB.png" },
//     { imagen: imagenPlacasolar, src: "/images/objetos/placasolarBuenaB.png" }
//   ];

//   objetos.forEach((objeto) => {
//     let positionIsValid = false;

//     while (!positionIsValid) {
//       let randomX = Math.floor(Math.random() * 8);
//       let randomY = Math.floor(Math.random() * 8);

//       // Obtener las posiciones absolutas del objeto en píxeles
//       const objetoLeft = randomY * 100;
//       const objetoTop = randomX * 80;

//       // Verificar si las cuatro esquinas del objeto están dentro del camino
//       const objetoTopLeftRow = Math.floor((objetoTop) / 80);
//       const objetoTopLeftColumn = Math.floor((objetoLeft) / 100);

//       const objetoTopRightRow = Math.floor((objetoTop) / 80);
//       const objetoTopRightColumn = Math.floor((objetoLeft + objeto.imagen.width) / 100);

//       const objetoBottomLeftRow = Math.floor((objetoTop + objeto.imagen.height) / 80);
//       const objetoBottomLeftColumn = Math.floor((objetoLeft) / 100);

//       const objetoBottomRightRow = Math.floor((objetoTop + objeto.imagen.height) / 80);
//       const objetoBottomRightColumn = Math.floor((objetoLeft + objeto.imagen.width) / 100);

//       // Verificar si todas las esquinas están dentro del camino  
//       const topLeftIsBlocked = arrayCamino[objetoTopLeftRow][objetoTopLeftColumn] === 0;
//       const topRightIsBlocked = arrayCamino[objetoTopRightRow][objetoTopRightColumn] === 0;
//       const bottomLeftIsBlocked = arrayCamino[objetoBottomLeftRow][objetoBottomLeftColumn] === 0;
//       const bottomRightIsBlocked = arrayCamino[objetoBottomRightRow][objetoBottomRightColumn] === 0;

//       if (!topLeftIsBlocked && !topRightIsBlocked && !bottomLeftIsBlocked && !bottomRightIsBlocked) {
//         // Si ninguna esquina está bloqueada, la posición es válida
//         positionIsValid = true; 
//       }
//     }

//     // Usar el ID del objeto para obtener el contenedor existente
//     let imagenObjeto = document.getElementById(`imagen${objeto.imagen.tagName}`) || document.createElement("div");
    
//     // Establecer la posición del contenedor
//     imagenObjeto.id = `imagen${objeto.imagen.tagName}`;
//     imagenObjeto.style.position = "absolute";
//     imagenObjeto.style.left = objetoLeft + "px";
//     imagenObjeto.style.top = objetoTop + "px"; 

//     // Limpiar contenido previo y agregar la imagen del objeto al contenedor
//     imagenObjeto.innerHTML = '';
//     imagenObjeto.appendChild(objeto.imagen);

//     // Agregar el contenedor al juego solo si no estaba presente antes
//     if (!document.getElementById(`imagen${objeto.imagen.tagName}`)) {
//       game.appendChild(imagenObjeto);
//     }
//   });
// }


// function spawnObjetos() {
//   // Crear tres imágenes diferentes
//   let imagenPiedra = document.createElement("img");
//   let imagenPalo = document.createElement("img");
//   let imagenPlacasolar = document.createElement("img");

//   // Definir las fuentes de las imágenes
//   imagenPiedra.src = "/images/objetos/piedra.png";
//   imagenPalo.src = "/images/objetos/paloBuenoB.png";
//   imagenPlacasolar.src = "/images/objetos/placasolarBuenaB.png";

//   // Generar posiciones aleatorias dentro de la matriz para cada objeto
//   let objetos = [
//     { imagen: imagenPiedra, src: "/images/objetos/piedra.png" },
//     { imagen: imagenPalo, src: "/images/objetos/paloBuenoB.png" },
//     { imagen: imagenPlacasolar, src: "/images/objetos/placasolarBuenaB.png" }
//   ];

//   objetos.forEach((objeto) => {
//     let positionIsValid = false;

//     while (!positionIsValid) {
//       let randomX = Math.floor(Math.random() * 8);
//       let randomY = Math.floor(Math.random() * 8);

//       // Obtener las posiciones absolutas del objeto en píxeles
//       const objetoLeft = randomY * 100;
//       const objetoTop = randomX * 80;

//       // Verificar si las cuatro esquinas del objeto están dentro del camino
//       const objetoTopLeftRow = Math.floor((objetoTop) / 80);
//       const objetoTopLeftColumn = Math.floor((objetoLeft) / 100);

//       const objetoTopRightRow = Math.floor((objetoTop) / 80);
//       const objetoTopRightColumn = Math.floor((objetoLeft + objeto.imagen.offsetWidth) / 100);

//       const objetoBottomLeftRow = Math.floor((objetoTop + objeto.imagen.offsetHeight) / 80);
//       const objetoBottomLeftColumn = Math.floor((objetoLeft) / 100);

//       const objetoBottomRightRow = Math.floor((objetoTop + objeto.imagen.offsetHeight) / 80);
//       const objetoBottomRightColumn = Math.floor((objetoLeft + objeto.imagen.offsetWidth) / 100);

//       // Verificar si todas las esquinas están dentro del camino  
//       const topLeftIsBlocked = arrayCamino[objetoTopLeftRow][objetoTopLeftColumn] === 0;
//       const topRightIsBlocked = arrayCamino[objetoTopRightRow][objetoTopRightColumn] === 0;
//       const bottomLeftIsBlocked = arrayCamino[objetoBottomLeftRow][objetoBottomLeftColumn] === 0;
//       const bottomRightIsBlocked = arrayCamino[objetoBottomRightRow][objetoBottomRightColumn] === 0;

//       if (!topLeftIsBlocked && !topRightIsBlocked && !bottomLeftIsBlocked && !bottomRightIsBlocked) {
//         // Si ninguna esquina está bloqueada, la posición es válida
//         positionIsValid = false; 
        
//     } else{

//         // Usar el ID del objeto para obtener el contenedor existente
//         let imagenObjeto = document.getElementById(`imagen${objeto.imagen.tagName}`);
  
//         // Establecer la posición del contenedor
//        imagenObjeto.style.left = objetoLeft + "px";
//         imagenObjeto.style.top = objetoTop + "px"; 

//         imagenObjeto.appendChild(`imagen${objeto.imagen.tagName}`);
  
//         // Agregar el contenedor al juego solo si no estaba presente antes
//           game.appendChild(imagenObjeto);
//     }
//   }
//   });
// }


